#!/bin/sh
set -e

# This hook runs after the snap is refreshed/updated

# Ensure directories exist with correct permissions
mkdir -p "$SNAP_DATA/etc"
mkdir -p "$SNAP_DATA/log"
mkdir -p "$SNAP_DATA/db"
mkdir -p "$SNAP_DATA/db/blocklists"

# Check if config file exists and backup it
if [ -f "$SNAP_DATA/sdns.conf" ]; then
    # Create backup with timestamp
    backup_file="$SNAP_DATA/sdns.conf.backup.$(date +%Y%m%d-%H%M%S)"
    cp "$SNAP_DATA/sdns.conf" "$backup_file"
    echo "Configuration backed up to $backup_file"
fi

# Update blocklists after refresh
# The service will handle this automatically on start, but we can trigger it
echo "Snap refreshed successfully. SDNS will update blocklists on next start."

# Log the update
echo "$(date): SDNS snap updated to version $(snapctl get version)" >> "$SNAP_DATA/log/snap-updates.log"
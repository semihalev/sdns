#!/bin/sh
set -e

# Create necessary directories
mkdir -p "$SNAP_DATA/etc"
mkdir -p "$SNAP_DATA/log"
mkdir -p "$SNAP_DATA/db"

# Generate default config if it doesn't exist
if [ ! -f "$SNAP_DATA/sdns.conf" ]; then
    cat > "$SNAP_DATA/sdns.conf" << 'EOF'
# SDNS Configuration
# Generated by snap configure hook

[server]
# DNS server port
port = "53"

# DNS server bind ip
bind = "0.0.0.0"

# TLS certificate and key for DoT/DoH
# tlscertificate = "$SNAP_DATA/server.crt"
# tlsprivatekey = "$SNAP_DATA/server.key"

# DNS over HTTPS
# doh = true
# dohtimeout = "30s"

# DNS over TLS
# dot = true

# DNS over QUIC
# doq = true

[resolver]
# Root DNS servers
rootservers = [
    "192.5.5.241:53",
    "198.41.0.4:53",
    "192.112.36.4:53",
    "192.203.230.10:53",
    "192.33.4.12:53",
    "199.7.91.13:53",
    "192.58.128.30:53"
]

# Resolve timeout
timeout = "5s"

# Query timeout for upstream
querytimeout = "30s"

# Enable DNSSEC validation
dnssec = true

[cache]
# Max cache size
maxsize = 100000

# Cache TTL settings
maxttl = 86400
minttl = 0
negativettl = 600

# Prefetch expiring entries
prefetch = 80

[blocklist]
# Blocklist directory
blocklistdir = "$SNAP_DATA/db/blocklists"

# Blocklist sources
sources = [
    "https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts",
]

# Blocklist update interval
updateinterval = "24h"

[accesslist]
# Allowed clients (empty means all allowed)
clients = []

[ratelimit]
# Rate limit per client
ratelimit = 0

[log]
# Log level: debug, info, warn, error
level = "info"

# Log file path
# file = "$SNAP_DATA/log/sdns.log"

# Enable access log
# accesslog = true
# accesslogfile = "$SNAP_DATA/log/access.log"

EOF
    echo "Created default configuration at $SNAP_DATA/sdns.conf"
fi

# Handle snap configuration options
# Example: snap set sdns port=5353

# Port configuration
port=$(snapctl get port)
if [ -n "$port" ]; then
    # Update port in config file
    sed -i "s/^port = \"[0-9]*\"/port = \"$port\"/" "$SNAP_DATA/sdns.conf"
    echo "Set DNS port to $port"
fi

# Bind address configuration  
bind=$(snapctl get bind)
if [ -n "$bind" ]; then
    sed -i "s/^bind = \"[^\"]*\"/bind = \"$bind\"/" "$SNAP_DATA/sdns.conf"
    echo "Set bind address to $bind"
fi

# DNSSEC configuration
dnssec=$(snapctl get dnssec)
if [ -n "$dnssec" ]; then
    sed -i "s/^dnssec = .*/dnssec = $dnssec/" "$SNAP_DATA/sdns.conf"
    echo "Set DNSSEC to $dnssec"
fi

# DoH configuration
doh=$(snapctl get doh)
if [ -n "$doh" ]; then
    # Uncomment and set DoH
    sed -i "s/^# doh = .*/doh = $doh/" "$SNAP_DATA/sdns.conf"
    echo "Set DNS-over-HTTPS to $doh"
fi

# DoT configuration
dot=$(snapctl get dot)
if [ -n "$dot" ]; then
    # Uncomment and set DoT
    sed -i "s/^# dot = .*/dot = $dot/" "$SNAP_DATA/sdns.conf"
    echo "Set DNS-over-TLS to $dot"
fi

# DoQ configuration
doq=$(snapctl get doq)
if [ -n "$doq" ]; then
    # Uncomment and set DoQ
    sed -i "s/^# doq = .*/doq = $doq/" "$SNAP_DATA/sdns.conf"
    echo "Set DNS-over-QUIC to $doq"
fi

# Log level configuration
loglevel=$(snapctl get log.level)
if [ -n "$loglevel" ]; then
    sed -i "s/^level = \"[^\"]*\"/level = \"$loglevel\"/" "$SNAP_DATA/sdns.conf"
    echo "Set log level to $loglevel"
fi

# Cache size configuration
cachesize=$(snapctl get cache.size)
if [ -n "$cachesize" ]; then
    sed -i "s/^maxsize = .*/maxsize = $cachesize/" "$SNAP_DATA/sdns.conf"
    echo "Set cache size to $cachesize"
fi

# Rate limit configuration
ratelimit=$(snapctl get ratelimit)
if [ -n "$ratelimit" ]; then
    sed -i "s/^ratelimit = .*/ratelimit = $ratelimit/" "$SNAP_DATA/sdns.conf"
    echo "Set rate limit to $ratelimit"
fi

# TLS certificate configuration
tlscert=$(snapctl get tls.certificate)
tlskey=$(snapctl get tls.key)
if [ -n "$tlscert" ] && [ -n "$tlskey" ]; then
    # Copy certificates to snap data directory
    if [ -f "$tlscert" ]; then
        cp "$tlscert" "$SNAP_DATA/server.crt"
        chmod 600 "$SNAP_DATA/server.crt"
    fi
    if [ -f "$tlskey" ]; then
        cp "$tlskey" "$SNAP_DATA/server.key"
        chmod 600 "$SNAP_DATA/server.key"
    fi
    # Uncomment and set paths
    sed -i "s|^# tlscertificate = .*|tlscertificate = \"\$SNAP_DATA/server.crt\"|" "$SNAP_DATA/sdns.conf"
    sed -i "s|^# tlsprivatekey = .*|tlsprivatekey = \"\$SNAP_DATA/server.key\"|" "$SNAP_DATA/sdns.conf"
    echo "Configured TLS certificates"
fi

# Restart the service if it's running to apply changes
if snapctl services sdns.sdns | grep -q active; then
    snapctl restart sdns.sdns
    echo "Restarted sdns service"
fi
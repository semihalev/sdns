// Code generated by gen.go DO NOT EDIT.

package main

import (
	"github.com/semihalev/sdns/config"
	"github.com/semihalev/sdns/middleware"
	"github.com/semihalev/sdns/middleware/accesslist"
	"github.com/semihalev/sdns/middleware/accesslog"
	"github.com/semihalev/sdns/middleware/as112"
	"github.com/semihalev/sdns/middleware/blocklist"
	"github.com/semihalev/sdns/middleware/cache"
	"github.com/semihalev/sdns/middleware/chaos"
	"github.com/semihalev/sdns/middleware/edns"
	"github.com/semihalev/sdns/middleware/failover"
	"github.com/semihalev/sdns/middleware/forwarder"
	"github.com/semihalev/sdns/middleware/hostsfile"
	"github.com/semihalev/sdns/middleware/loop"
	"github.com/semihalev/sdns/middleware/metrics"
	"github.com/semihalev/sdns/middleware/ratelimit"
	"github.com/semihalev/sdns/middleware/recovery"
	"github.com/semihalev/sdns/middleware/resolver"
)

func init() {
	middleware.Register("recovery", func(cfg *config.Config) middleware.Handler { return recovery.New(cfg) })
	middleware.Register("loop", func(cfg *config.Config) middleware.Handler { return loop.New(cfg) })
	middleware.Register("metrics", func(cfg *config.Config) middleware.Handler { return metrics.New(cfg) })
	middleware.Register("accesslist", func(cfg *config.Config) middleware.Handler { return accesslist.New(cfg) })
	middleware.Register("ratelimit", func(cfg *config.Config) middleware.Handler { return ratelimit.New(cfg) })
	middleware.Register("edns", func(cfg *config.Config) middleware.Handler { return edns.New(cfg) })
	middleware.Register("accesslog", func(cfg *config.Config) middleware.Handler { return accesslog.New(cfg) })
	middleware.Register("chaos", func(cfg *config.Config) middleware.Handler { return chaos.New(cfg) })
	middleware.Register("hostsfile", func(cfg *config.Config) middleware.Handler { return hostsfile.New(cfg) })
	middleware.Register("blocklist", func(cfg *config.Config) middleware.Handler { return blocklist.New(cfg) })
	middleware.Register("as112", func(cfg *config.Config) middleware.Handler { return as112.New(cfg) })
	middleware.Register("cache", func(cfg *config.Config) middleware.Handler { return cache.New(cfg) })
	middleware.Register("failover", func(cfg *config.Config) middleware.Handler { return failover.New(cfg) })
	middleware.Register("resolver", func(cfg *config.Config) middleware.Handler { return resolver.New(cfg) })
	middleware.Register("forwarder", func(cfg *config.Config) middleware.Handler { return forwarder.New(cfg) })
}
